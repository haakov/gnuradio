id: fec_ber_bf
label: BER
flags: [ python, cpp ]

parameters:
-   id: test_mode
    label: Test Mode
    dtype: enum
    default: 'False'
    options: ['False', 'True']
-   id: berminerrors
    label: BER Min. Errors
    dtype: int
    default: '100'
    hide: ${ ('part' if test_mode else 'all') }
-   id: berlimit
    label: BER Limit
    dtype: float
    default: '-7.0'
    hide: ${ ('part' if test_mode else 'all') }

inputs:
-   label: in0
    domain: stream
    dtype: byte
-   label: in1
    domain: stream
    dtype: byte

outputs:
-   domain: stream
    dtype: float

templates:
    imports: from gnuradio import fec
    make: fec.ber_bf(${test_mode}, ${berminerrors}, ${berlimit})

cpp_templates:
    includes: [ '#include <gnuradio/fec/ber_bf.h>' ]
    declarations: 'fec::ber_bf::sptr ${id};'
    make: 'this->${id} = fec::ber_bf::make(${test_mode}, ${berminerrors}, ${berlimit});'
    link: ['gnuradio-fec']
    translations:
        'True': 'true'
        'False': 'false'

file_format: 1
